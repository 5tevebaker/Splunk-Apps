########################
# Tsidx stats collections 
########################

[PAN - Traffic - Collect]
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
displayview = flashtimeline
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = flashtimeline
search = `pan_traffic` | table _time log_subtype vsys app action bytes bytes_sent bytes_received dst_ip egress_interface ingress_interface dst_port dst_user packets protocol src_ip src_user | tscollect namespace=pan_traffic
disabled = 0

[PAN - Web Activity - Collect]
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
displayview = flashtimeline
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = flashtimeline
search = `pan_web_activity` | table _time vsys app category dst_ip src_ip dst_hostname src_user action | tscollect namespace=pan_web
disabled = 0

[PAN - Threat - Collect]
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
displayview = flashtimeline
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = flashtimeline
search = `pan_threat` | table _time vsys app dst_user threat_id severity category src_ip dst_ip log_subtype RISK | tscollect namespace=pan_threat
disabled = 0

[PAN - ThreatDetail - Collect]
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
displayview = flashtimeline
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = flashtimeline
search = `pan_index` NOT "THREAT,url" | eval User=coalesce(src_user,dst_user,"unknown_user") | eval External_IP=if(isnull(direction), dst_ip, src_ip) | eval Location=if(isnull(direction), dst_location, src_location) |rename application AS Application |rename session_id AS Session |stats values(sourcetype) as SourceType values(threat_id) as Threat sum(bytes) as Bytes sum(elapsed_time) as Duration by Session User External_IP Application Location | search (SourceType="pan_threat" OR SourceType="pan_threat-2050") Bytes !="" Location != "" User !="" | table Session User External_IP Application Location SourceType Threat Bytes Duration | tscollect namespace=pan_threatDetail
disabled = 0

[PAN - Content - Collect]
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
displayview = flashtimeline
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = flashtimeline
search = `pan_web_activity` content_type=* | table _time vsys app category src_ip dst_ip dst_hostname src_user action content_type |rex field="content_type" "(?<Major_Type>.*)/" | tscollect namespace=pan_content
disabled = 0

[PAN - Data Filtering - Collect]
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
displayview = flashtimeline
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = flashtimeline
search = `pan_data_filtering` | table _time src_user dst_location src_ip dst_ip app threat_id action vsys | tscollect namespace=pan_data
disabled = 0

[PAN - WildFire - Collect]
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
displayview = flashtimeline
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = flashtimeline
search = `pan_wildfire` | rex field=threat_id "\((?<report_id>\d+)\)" | table _time report_id dst_user dst_location src_ip dst_ip category app threat_id action vsys misc | fillnull value="" dst_user | tscollect namespace=pan_wildfire
disabled = 0

[PAN - WildFire Reports - Retrieve]
cron_schedule = */1 * * * *
dispatch.earliest_time = -1m@m
displayview = flashtimeline
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = flashtimeline
search = `pan_wildfire` | rex field=threat_id "\((?<report_id>\d+)\)" | wildfirereport | table wildfire_report | rename wildfire_report AS _raw | collect index=pan_logs sourcetype=pan_wildfire_report
disabled = 0

[PAN - WildFire Reports Malware Traffic - Collect]
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
displayview = flashtimeline
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = flashtimeline
search = `pan_wildfire_report` wildfire.report.malware=yes | rename wildfire.report.id AS report_id | rename wildfire.report.network.TCP{@ip} AS tcp_ip | rename wildfire.report.network.TCP{@port} AS tcp_port | rename wildfire.report.network.UDP{@ip} AS udp_ip | rename wildfire.report.network.UDP{@port} AS udp_port | fillnull value="" tcp_ip tcp_port udp_ip udp_port | eval tcp_ip_marked = mvjoin(tcp_ip,"-tcp,") | eval tcp_ip_marked = replace(tcp_ip_marked,"$","-tcp,") | eval udp_ip_marked = mvjoin(udp_ip,"-udp,") | eval udp_ip_marked = replace(udp_ip_marked,"$","-udp,") | eval dst_ip = tcp_ip_marked+","+udp_ip_marked | eval tcp_port_str=mvjoin(tcp_port,",") | eval udp_port_str=mvjoin(udp_port,",") | eval dst_port = tcp_port_str+","+udp_port_str | makemv delim="," dst_ip | makemv delim="," dst_port | eval dst_ip_port = mvzip(dst_ip,dst_port) | mvexpand dst_ip_port | rex field=dst_ip_port "(?<dst_ip>[^,-]+)-(?<protocol>[\w]{3}),(?<dst_port>[^,-]+)" | table _time report_id dst_ip dst_port protocol | tscollect namespace=pan_wildfire_report_malware_traffic
disabled = 0

[PAN - System - Collect]
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
displayview = flashtimeline
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = flashtimeline
search = `pan_system` | table _time vsys log_subtype description severity event_id module serial_number | tscollect namespace=pan_system
disabled = 0

[PAN - Config - Collect]
cron_schedule = */5 * * * *
dispatch.earliest_time = -5m@m
displayview = flashtimeline
enableSched = 1
realtime_schedule = 0
request.ui_dispatch_view = flashtimeline
search = `pan_config` | table _time vsys host admin client_ip client_type cmd configuration_path result serial_number log_subtype | fillnull value="" configuration_path | tscollect namespace=pan_config
disabled = 0

[PAN - Traffic - Applications]
action.email.reportServerEnabled = 0
alert.suppress = 0
alert.track = 0
dispatch.earliest_time = rt-5m
dispatch.latest_time = rt
displayview = flashtimeline
request.ui_dispatch_view = flashtimeline
search = `pan_index` sourcetype=pan_traffic  | stats sparkline sum(bytes) AS sbytes by app vsys src_zone | sort -sbytes | head 8 | eval Application=upper(app) | eval "Vol in MB"=round(sbytes/1024/1024) |rename sparkline AS Distribution | rename vsys AS VSYS| rename src_zone AS "Src Zone" | table Application VSYS "Src Zone" "Vol in MB" Distribution
